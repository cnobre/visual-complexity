"0",""
"0","powerAnalysisGraph <- function(m1, m2, stdev, iterNum=15){"
"0","  # stdev <- sd_duration.median"
"0","  # m1 <- mean(search$duration.median)"
"0","  # m2 <- mean(nonsearch$duration.median)"
"0","  # # m1 <- mean(foresight$duration.median)"
"0","  # # m2 <- mean(nonsearch$duration.median)"
"0","  "
"0","  iteration <- 15"
"0","  "
"0","  difference <- 0"
"0","  effectSize <- 0"
"0","  numParticipants <- 0"
"0","  "
"0","  for(step in 1:iteration)"
"0","  {"
"0","    difference[step] <- abs(m1 - m2) * (0.9 ^ (step-1))"
"0","    effectSize[step] <- difference[step] / stdev"
"0","    numParticipants[step] <- pwr.t.test( "
"0","      d=effectSize[step], "
"0","      sig.level=.05, "
"0","      power=0.8, "
"0","      type=""two.sample"", "
"0","      alternative=""greater"" "
"0","    )$n * 1.15 * 2"
"0","  }"
"0","  "
"0","  #dual axis code online: https://rpubs.com/kohske/dual_axis_in_ggplot2"
"0","  grid.newpage()"
"0","  "
"0","  pw <- data.frame(difference=difference, numParticipants=numParticipants, effectSize=effectSize)"
"0","  p1 <- ggplot(pw,aes(x=difference)) + geom_line(aes(y = numParticipants)) +"
"0","    scale_y_continuous(breaks = pretty(pw$numParticipants, n = 10))"
"0","  p2<- ggplot(pw,aes(x=difference)) + geom_line(aes(y = effectSize)) +"
"0","    theme(panel.background = element_rect(fill = NA))+"
"0","    scale_y_continuous(breaks = pretty(pw$effectSize, n = 10))"
"0","  p2"
"0","  "
"0","  # extract gtable"
"0","  g1 <- ggplot_gtable(ggplot_build(p1))"
"0","  g2 <- ggplot_gtable(ggplot_build(p2))"
"0","  "
"0","  # overlap the panel of 2nd plot on that of 1st plot"
"0","  pp <- c(subset(g1$layout, name == ""panel"", se = t:r))"
"0","  g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == ""panel"")]], pp$t, pp$l, pp$b, pp$l)"
"0","  "
"0","  # axis tweaks"
"0","  ia <- which(g2$layout$name == ""axis-l"")"
"0","  ga <- g2$grobs[[ia]]"
"0","  ax <- ga$children[[2]]"
"0","  ax$widths <- rev(ax$widths)"
"0","  ax$grobs <- rev(ax$grobs)"
"0","  ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, ""npc"") + unit(0.15, ""cm"")"
"0","  g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)"
"0","  g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)"
"0","  "
"0","  # draw it"
"0","  grid.draw(g)"
"0","}"
"0",""
